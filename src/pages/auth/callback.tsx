import { useRouter } from 'next/router'
import React, { useEffect } from 'react'
import { useGetUserByAuthIdLazyQuery } from '../../generated/types'
import { auth0 } from '../../services/authentication'
import LoadingPage from '../../scenes/UtilsPage/Loading'
import { withApollo } from '../../services/lib/apollo'

const Callback: React.FunctionComponent = props => {
    const [getUser, { data, called }] = useGetUserByAuthIdLazyQuery()
    const router = useRouter()

    useEffect(() => {
        const handleAuthentication = async () => {
            const authInfo = await auth0.handleAuthentication()
            const authId = authInfo.user_details.sub // "sub" contains the unique user id generated by auth0

            getUser({ variables: { authId } })
        }
        handleAuthentication()
    }, [])

    if (called && typeof data?.user !== 'undefined') {
        // handle if user exists or not and redirect
        if (data.user === null) {
            // user doesn't exist, we redirect him to the welcome page
            router.push(`/welcome`)
        } else {
            // redirect user to their profile
            router.push(`/${data.user.slug}`)
        }
    }

    return <LoadingPage />
}

export default withApollo(Callback)
